------------------------------------------------------------------
-- io.ast
--
-- this module implements the I/O system for Asteroid
--
-- (c) Lutz Hamel, University of Rhode Island
------------------------------------------------------------------
function raw_print
------------------------------------------------------------------
-- dumps the AST to screen
with item do escape
"
from pprint import pprint
item_val = state.symbol_table.lookup_sym('item')
pprint(item_val)
"
return none
end

------------------------------------------------------------------
function println
------------------------------------------------------------------
with item do escape
"
from asteroid_support import term2string
item_val = state.symbol_table.lookup_sym('item')
print(term2string(item_val))
"
return none
end

------------------------------------------------------------------
function print
------------------------------------------------------------------
with item do escape
"
from asteroid_support import term2string
item_val = state.symbol_table.lookup_sym('item')
print(term2string(item_val),end='')
"
return none
end

------------------------------------------------------------------
function read
------------------------------------------------------------------
-- read string from stdin
with none do return escape
"
global __retval__
from sys import stdin
__retval__ = ('string', stdin.read())
"
end

------------------------------------------------------------------
function input
------------------------------------------------------------------
-- mapping the Asteroid input function onto the
-- Python input function
with prompt do return escape
"
global __retval__
from asteroid_support import term2string
prompt_val = state.symbol_table.lookup_sym('prompt')
if prompt_val[0] == 'none':
  __retval__ = ('string', input())
elif prompt_val[0] != 'string':
  raise ValueError('input function requires a string prompt')
else:
  # term2string is necessary here in order to process formatting specs
  __retval__ = ('string', input(term2string(prompt_val)))
"
end
