#!/usr/bin/env python
###########################################################################################
# Asteroid toplevel driver
#
# (c) Lutz Hamel, University of Rhode Island
###########################################################################################

import cProfile
import sys
import os
from asteroid_interp import interp
from asteroid_version import VERSION

def display_help():
    print("usage: asteroid [-s][-t][-v][-w][-p][-l] <input file>")
    print("")
    print("command line flags:")
    print(" -s    symbol table dump flag")
    print(" -t    AST dump flag")
    print(" -v    version flag")
    print(" -w    disable tree walk flag")
    print(" -p    generate pstats flag")
    print(" -l    disable prologue flag")
    print(" -h    display help flag")


# defaults for the flags - when the flag is set on the command line
# it simply toggles the default value in this table.
flags = {
    '-s' : False, # symbol table dump flag
    '-t' : False, # AST dump flag
    '-v' : False, # version flag
    '-w' : True,  # tree walk flag
    '-p' : False, # generate pstats flag
    '-l' : True,  # prologue flag
    '-h' : False, # display help flag
}

flag_names = list(flags.keys())

for fl in sys.argv:
    if fl[0] != '-':
        continue
    elif fl not in flag_names:
        print("unknown flag {}".format(fl))
        sys.exit(0)
    flags[fl] = not flags[fl]

if flags['-h'] or len(sys.argv) == 1:
    display_help()
    sys.exit(0)

if flags['-v']:
    print("** Asteroid Version {} **".format(VERSION))
    sys.exit(0)

input_file = sys.argv[-1]

if not os.path.isfile(input_file):
    print("unknown file {}".format(input_file))
    sys.exit(0)

f = open(input_file, 'r')
input_stream = f.read()
f.close()

# execute interpreter
interp_object = \
'''interp(input_stream=input_stream,
       input_name = input_file,
       tree_dump=flags['-t'],
       do_walk=flags['-w'],
       symtab_dump=flags['-s'],
       prologue=flags['-l'])'''

if flags['-p']:
    # generates pstats into the file 'pstats'
    # see https://docs.python.org/3/library/profile.html
    cProfile.run(interp_object, 'pstats')
else:
    exec(interp_object)
